// Created, February 4th, 2024 - By: Devon Griffith A.K.A. rootPHAGE / 我爱数据
// Run on Windows [ node <path to file>\server.js ]
// [ dotnet run (inside project directory) Logic_Bomb.cs ]
// A Logic Bomb simulation to highlight the dangers of malicious code inside systems

using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using System.Timers;
using System.Random;

namespace LogicBombSimulator
{
    class Program
    {
        private static Timer timer;
        private static readonly HttpClient client = new HttpClient();
        private static readonly Random random = new Random();

        static void Main(string[] args)
        {
            ScheduleNextCheck();
            Console.ReadLine(); // Keep the application running
        }

        private static void ScheduleNextCheck()
        {
            // Calculate a random interval, ensuring it's within work hours (e.g., 9 AM to 5 PM)
            int hours = random.Next(9, 17); // Random hour between 9 and 16 (4 PM)
            int minutes = random.Next(0, 60); // Random minute
            int seconds = random.Next(0, 60); // Random second

            // Calculate the time until the next check
            DateTime now = DateTime.Now;
            DateTime nextCheck = new DateTime(now.Year, now.Month, now.Day, hours, minutes, seconds);
            if (nextCheck < now) // If the calculated time is in the past, schedule it for the next day
            {
                nextCheck = nextCheck.AddDays(1);
            }
            double interval = (nextCheck - now).TotalMilliseconds;

            timer = new Timer(interval);
            timer.Elapsed += async (sender, e) => {
                await CheckEmployeeStatus();
                ScheduleNextCheck(); // Schedule the next check after the current one finishes
            };
            timer.AutoReset = false; // Only run the timer once for each scheduled check
            timer.Enabled = true;
        }

        private static async Task CheckEmployeeStatus()
        {
            var payload = new StringContent("{\"employeeID\":\"12345\", \"password\":\"password\"}", Encoding.UTF8, "application/json");
            try
            {
                var response = await client.PostAsync("http://localhost:3000/login", payload);
                if (!response.IsSuccessStatusCode)
                {
                    Console.WriteLine("Logic Bomb Triggered: Access Denied. This could have been a malicious action. Please use programming skills ethically.");
                    timer.Stop(); // Stop the timer to prevent further checks
                }
                else
                {
                    Console.WriteLine("Employee status check successful.");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
        }
    }
}

// DO NOT USE THIS SCRIPT MALICIOUSLY - PROVIDED FOR EDUCATIONAL PURPOSES ONLY
